<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newdeal.bikyeo.member.dao.MemberDao">
  <select id="searchId" parameterType="String" resultType="int">
    select count(m_Email) 
    from member 
    where m_Email = #{m_Email}
  </select>
  
  <insert id="memberInsert" parameterType="memberDto">
    insert into member (m_Email, m_Pwd, m_Name, m_Gender, m_Phone, enabled, m_Regdate, m_Update) 
    values (#{m_Email}, #{m_Pwd}, #{m_Name}, #{m_Gender}, #{m_Phone}, #{enabled}, now(), now()) 
  </insert>
  
  <insert id="memberAuthInsert" parameterType="String">
    insert into member_auth (m_Email, a_Code)
    values (#{m_Email}, 1)
  </insert>
  
  <update id="memberConfirm" parameterType="String"> 
    update member set enabled=1
    where m_Email = #{m_Email}
  </update>
  
  <select id="memberInfo" parameterType="String" resultType="memberDto">
    select m_Email, m_Name, m_Gender, m_Phone, m_Regdate, m_Update
    from member
    where m_Email = #{m_Email}
  </select>
  
  <select id="pwdConfirm" parameterType="memberDto" resultType="String">
    select m_Pwd
    from member
    where m_Email = #{m_Email} 
  </select>
  
  <update id="memberUpdate" parameterType="memberDto">
    update member set m_Phone = #{m_Phone}, m_Update = now()
    where m_Email = #{m_Email}
  </update>
  
  <update id="memberUpdateWithPwd" parameterType="memberDto">
    update member set m_Pwd = #{m_Pwd}, m_Phone = #{m_Phone}, m_Update = now()
    where m_Email = #{m_Email}
  </update>
  
  <select id="memberShare" parameterType="String" resultType="Map">
    select s.s_Num, s.m_Email, s.p_Num, s.s_Sdate, s.s_Pdate, s.s_Edate, s.c_Code, c.p_Num, c_Status, c.c_Move, c.c_Prev
    from share s join cycle c
    on s.c_Code = c.c_Code
    where s.m_Email = #{m_Email}
    order by s.s_Sdate desc;
  </select>
  
  <delete id="memberDeleteAuth" parameterType="memberDto">
    delete from member_auth where m_Email = #{m_Email}
  </delete>
  
  <delete id="memberDeleteSharePayment" parameterType="memberDto">
    delete from share_payment 
    where s_Num in (
      select s_Num 
      from share
      where m_Email = #{m_Email}
    )
  </delete>
  
  <delete id="memberDeleteShare" parameterType="memberDto">
    delete from share where m_Email = #{m_Email}
  </delete>
  
  <delete id="memberDelete" parameterType="memberDto">
    delete from member where m_Email = #{m_Email}
  </delete>
  
  <select id="searchEmail" parameterType="memberDto" resultType="String">
    select m_Email
    from member
    where m_Name = #{m_Name}
    and m_Phone = #{m_Phone}
  </select>
  
  <update id="editPwd" parameterType="memberDto">
    update member set m_Pwd = #{m_Pwd}, m_Update = now()
    where m_Email = #{m_Email}
  </update>
  
  <select id="sharePayment" parameterType="String" resultType="Map">
    select sp.sp_Num, sp.s_Num, sp.sp_Pay, sp.sp_Status, sp.sp_Date
    from share_payment sp join share s
    on sp.s_Num = s.s_Num
    where s.m_Email = #{m_Email}
    order by sp_Date desc
  </select>
  
</mapper>